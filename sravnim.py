from tkinter import *
from tkinter import messagebox
from tkinter import filedialog
import pandas as pd
import tkinter as tk
from tkinter import ttk
from tkinter.ttk import *
from time import sleep
import os
import zipfile
from pathlib import PurePath
import sys
import codecs
sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach())

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª 1
def openanyfile():
    try:
        global selected_file
        selected_file = filedialog.askopenfilename()
        label1.configure(text=selected_file.split('/')[-1])
        df1 = pd.read_excel(selected_file)
    except Exception as err:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message="üîí –ü—Ä–∏–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã, —á—Ç–æ —Ç–æ —Å –§–∞–π–ª 1 —Ñ–æ—Ä–º–∞—Ç xlsx? : " + str(err))

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª 2
def openanyfile2():
    try:
        global selected_file2
        selected_file2 = filedialog.askopenfilename()
        label2.configure(text=selected_file2.split('/')[-1])
        df2 = pd.read_excel(selected_file2)
    except Exception as err:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message="üîí –ü—Ä–∏–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã, —á—Ç–æ —Ç–æ —Å –§–∞–π–ª 2 : " + str(err))


# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª 1
def showfile1():
    #global df1
    df1 = pd.read_excel(selected_file)
    label3.configure(text=df1.keys().tolist())
    col_name = list(df1.columns)
    combo['values'] = col_name

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª 2
def showfile2():
    # global df2
    df2 = pd.read_excel(selected_file2)
    label4.configure(text=df2.columns.tolist())
    col_name = list(df2.columns)
    combo2['values'] = col_name


# –¥–æ–±–∞–≤–∏—Ç—å —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å 1
def showrows():
    global rows
    rows = combo3.get()
    df1 = pd.read_excel(selected_file, skiprows=int(rows))
    label3.configure(text=df1.keys().tolist())
    col_name = list(df1.columns)
    combo['values'] = col_name

# –¥–æ–±–∞–≤–∏—Ç—å —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å 2
def showrows2():
    #global rows
    rows = combo3.get()
    df2 = pd.read_excel(selected_file2, skiprows=int(rows))
    label4.configure(text=df2.keys().tolist())
    col_name = list(df2.columns)
    combo2['values'] = col_name



# –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑ –æ–∫–æ–Ω entry –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
def show_message():
    global st1, st2
    st1 = combo.get()
    st2 = combo2.get()

# —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –°–ª–∏—è–Ω–∏—è
    if st1 != '':
        messagebox.showinfo(title='–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–∏—è–Ω–∏—è', message=st1)
    else:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message='–ù–µ –≤–≤–µ–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–∏—è–Ω–∏—è')

    # —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    if st2 != '':
        messagebox.showinfo(title='–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è', message=st2)
    else:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message='–ù–µ –≤–≤–µ–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è')


# —Ñ–∞–π–ª –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∞ –∏–∑ –ê–°–£
    try:
        df1 = pd.read_excel(selected_file,skiprows=int(rows))
        df1 = df1.rename(columns={st2: '–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º', st1: '–°–ª–∏—è–Ω–∏–µ'})
    except Exception as err:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message="üîí –ü—Ä–∏–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã : " + str(err))


# —Ñ–∞–π–ª –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞ –≤—ã–≥—Ä—É–∑–∫–∞ –∏–∑ –ï–ì–†–ù
    try:
        df2 = pd.read_excel(selected_file2, skiprows=int(rows))
        df2 = df2.rename(columns={st1: '–°–ª–∏—è–Ω–∏–µ', st2: '–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º'})
    except Exception as err:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message="üîí –ü—Ä–∏–≤–µ—Ç –æ—Ç —Å–∏—Å—Ç–µ–º—ã : " + str(err))
    # –ß–∏—Ç–∞–µ–º –∫–ª—é—á–∏ –≤ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º 1 –ø—Ä–æ–≤–µ—Ä—è–µ–º
    # global a
    key_slianie = df1.keys().tolist()

    # print(a)
    # print(st1)




# –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–∞ —Å–ª–∏—è–Ω–∏—è
    if '–°–ª–∏—è–Ω–∏–µ' in key_slianie:
        messagebox.showinfo(title='–°–ª–∏—è–Ω–∏–µ', message='–ö–ª—é—á –¥–ª—è —Å–ª–∏—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω')

    else:
        messagebox.showwarning(
            title="–æ—à–∏–±–∫–∞", message='–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏, –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∫–ª—é—á—å –¥–ª—è —Å–ª–∏—è–Ω–∏—è, –≤ –æ–±–æ–∏—Ö —Ñ–∞–π–ª–∞—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –ø—Ä–æ–≤–µ—Ä—Ç–µ –∏ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ')


    try:
        global df3
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º —Å–ª–∏—è–Ω–∏–µ –ø—Ä–∞–≤–æ–µ —Ç.–µ –∫ egrn –ø—Ä–∏–∫—Ä–µ–ø–∏–º —Å—Ç—Ä–æ—á–∫–∏ –∏–∑ –∞—Å—É
        df3 = pd.merge(df1, df2, left_on=['–°–ª–∏—è–Ω–∏–µ'], right_on=['–°–ª–∏—è–Ω–∏–µ'], suffixes=('_–§–∞–π–ª_1', '_–§–∞–π–ª_2'),  how='right')
    except Exception as err:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message="üîí C–∏—Å—Ç–µ–º–∞ –Ω–µ –≤–µ—Ä–Ω—ã–π —Å—Ç–æ–ª–±–∏–∫ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è - –µ–≥–æ –Ω–µ—Ç –≤ —Ñ–∞–π–ª–µ : " + str(err))

    try:
        bar = df3.style.set_properties(**{'border': '1.3px solid black', 'color': 'black'}).to_excel('out.xlsx', index=False)
        # –°–æ—Ö—Ä–∞–Ω–∏–º –≤ —Ñ–∞–π–ª
        #b = df3.to_excel('out.xlsx')
        #–∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä–∞ –∏ —Å—á–µ—Ç—á–∏–∫ % –¥–ª—è –Ω–µ–≥–æ –µ—Å–ª–∏ –¥–∞—Ç–∞ —Ñ—Ä–µ–π–º –Ω–µ –ø—É—Å—Ç–æ–π
        if bar !='':
         for i in range(number):
            progressbar.configure(value= i / (number / 101))
            label6.configure(text = f'{int(i / (number / 101))} %' )
            sleep(0.01)
            progressbar.update()


        messagebox.showinfo("Title", "–°–æ–∑–¥–∞–Ω —Ñ–∞–ª out.xlsx")
    except Exception as err:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message="üîí C–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ñ–∞–π–ª out.xlsx –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω –æ—Ç–∫—Ä—ã—Ç - –∑–∞–∫—Ä–æ–π—Ç–µ : " + str(err))

# –í—ã–≤–µ–¥–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω

    label5.configure(text=df3)
    col_name = list(df3.columns)
    combo4['values'] = col_name

    if bar != '':
        messagebox.showinfo(
        title='—Å–ª–∏—è–Ω–∏–µ', message='–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ')
        #progressbar.stop()      # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º progressbar

    else:
        messagebox.showwarning(
            title="–æ—à–∏–±–∫–∞", message='–ù–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Ñ–∞–π–ª–∞—Ö')

# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ú–µ—Ç–æ–∫ label –æ–≤
def remove_text():
    label1.config(text="")
    label2.config(text="")
    label3.config(text="")
    label4.config(text="")
    label5.config(text="")
    label7.config(text="")

def highlight_col(x):
    #copy df to new - original data are not changed
    df = x.copy()
    #set by condition
    mask = df['compare'] == False
    df.loc[mask, :] = 'background-color: yellow'
    df.loc[~mask,:] = 'background-color: white'
    return df

def add_item():
    lbox.insert(END, combo4.get())
    combo4.delete(0, END)

def del_list():
    select = list(lbox.curselection())
    select.reverse()
    for i in select:
        lbox.delete(i)


def print_list():
    df = (lbox.get(0, END))
    df = " ".join(lbox.get(0, END))
    modified_list = (df.split())
    try:
      df4 =  df3[modified_list]
      # —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç–æ–ª–±–∏–∫–∏  –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ compare
      df = df4
      df4['compare'] = df4['–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º_–§–∞–π–ª_1'] == df4['–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º_–§–∞–π–ª_2']


      df4.style.apply(highlight_col, axis=None).set_properties(**{'border': '1.3px solid grey','color': 'black'}).to_excel('outfinish.xlsx', index=False)
      #df4.style.apply(highlight_col, axis=None).to_excel('outfinish.xlsx', index=False)
      #df4.style.set_properties(**{'border': '1.3px solid black', 'color': 'black'}).to_excel('outfinish.xlsx', index=False)
      #df4.to_excel('outfinish.xlsx', index=False)
      messagebox.showinfo("Title", "–°–æ–∑–¥–∞–Ω —Ñ–∞–ª outfinish.xlsx")
    except Exception as err:
        messagebox.showerror(
            title="–æ—à–∏–±–∫–∞", message="üîí –°–∏—Å—Ç–µ–º–∞ : " + str(err))

def zip_ex():
    
    directory  = filedialog.askdirectory()
    #–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏/–∫–∞—Ç–∞–ª–æ–≥–µ os.listdir(directory)
    files = os.listdir(directory)
    messagebox.showinfo("–ü–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ —Ç–∞–º", files)
    for file in os.listdir(directory):
        filename = os.fsdecode(file)
        path = os.path.join(directory, filename)
        #print(path)
        if filename.endswith(".zip"):
            with zipfile.ZipFile(path) as zf:
                filik = zf.namelist()
                namefaile = filik[0]
                old_file = f'{directory}\\{namefaile}'
                new_file = f'{directory}\\{PurePath(filename).stem}{".xls"}'
                zf.extract(namefaile, directory)
                
                if os.path.exists(new_file):
                    
                    os.remove(new_file)
                    os.rename(old_file, new_file)
                     
                    print(f"–∏–∑ {filename} –∏–∑–≤–ª–µ—á–µ–Ω —Ñ–∞–π–ª:{os.path.basename(new_file)}")
                    label7.configure(text=f" –ò–∑: \n{filename}\n –ò–∑–≤–ª–µ—á–µ–Ω —Ñ–∞–π–ª :\n {os.path.basename(new_file)}") 
                else:
                    os.rename(old_file, new_file) 




# –í—ã–≤–µ–¥–µ–º —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω
window = Tk()
number = 284
window.title("–°—Ä–∞–≤–Ω–∏—Ç—å —Ñ–∞–π–ª—ã")
window.geometry("1500x700")


# window.iconbitmap(default="boss.ico")
window.iconphoto(False, tk.PhotoImage(file='osa.png'))
# window.iconbitmap(default="boss.ico")

# –û—Ç—Å—Ç—É–ø –æ—Ç –≤–µ—Ä—Ö–∞ –æ–∫–Ω–∞
frame = Frame(window, width=400, height=100)
frame = Frame(window)
frame.pack(expand=False)
# frame.pack(fill=Y)
# frame = Frame(master=window, relief=GROOVE, borderwidth=5)


# —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–µ—Ç–∫—É
label = Label(frame, text="–í—ã–±–µ—Ä–∏ —Ñ–∞–π–ª 1 –ø–æ–±–æ–ª—å—à–µ, –∑–∞—Ç–µ–º —Ñ–∞–π–ª 2 –º–µ–Ω—å—à–µ," "\n"
                          "–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞–≤ —Ç–∞–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è" '\n'
                          "—Å—Ç–æ–ª–±–∏–∫–æ–≤ –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–æ–º–µ—Ä –∏ –ø–ª–æ—â–∞–¥—å –≤ –æ–±–æ–∏—Ö" '\n'
                          "—Ñ–∞–π–ª–∞—Ö, —Å–ª–∏—è–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ –ø–µ—Ä–≤–æ–º—É —Å—Ç–æ–ª–±–∏–∫—É –Ω–æ–º–µ—Ä" '\n'
                          "–ø–æ—Ç–æ–º —Å–º–æ–∂–µ—Ç–µ —Å—Ä–∞–≤–Ω–∏—Ç—å –ø–ª–æ—â–∞–¥—å")
label.grid(row=0, column=1, pady=5)



# –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ 1:
base_lbl = Label(frame, text="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å–ª–∏—è–Ω–∏—è")
base_lbl.grid(row=2, column=1, pady=1)
# –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π 1:
entry = Entry(frame)
entry.grid(row=2, column=2, pady=2)

# –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ 2:
height_lbl = Label(frame, text="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
height_lbl.grid(row=3, column=1, pady=1)


height_lbl = Label(frame, text="–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
height_lbl.grid(row=4, column=1, pady=1)

# –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ 2:
# entry2 = Entry(frame)
# entry2.grid(row=3, column=2, pady=2)

# —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–∫—É—Å –Ω–∞ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
# entry.focus()

# –∫–Ω–æ–ø–∫–∏
file1 = ttk.Button(frame, text="–§–∞–π–ª 1", command=openanyfile)
file1.grid(row=2, column=0)

file2 = ttk.Button(frame, text="–§–∞–π–ª 2", command=openanyfile2)
file2.grid(row=3, column=0)

calc_btn = ttk.Button(frame, text="–°–ª–∏—è–Ω–∏–µ –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª", command=show_message)
calc_btn.grid(row=6, column=1)

calc_btn = ttk.Button(frame, text="—É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫–∏ f1", command=showrows)
calc_btn.grid(row=6, column=2)

calc_btn = ttk.Button(frame, text="—É–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫–∏ f2", command=showrows2)
calc_btn.grid(row=6, column=3)

show = ttk.Button(frame, text="–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ f1", command=showfile1)
show.grid(row=1, column=1)

show2 = ttk.Button(frame, text="–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ f2", command=showfile2)
show2.grid(row=1, column=2)

show3 = ttk.Button(frame, text="–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—Å—Ç", command=remove_text)
show3.grid(row=1, column=3)

# —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≤—ã–≤–æ–¥ –ø—É—Ç–∏ –∫  —Ñ–∞–ª–∞–º
label1 = ttk.Label(frame, text="", font="system")  # —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–µ—Ç–∫—É
label1.grid(row=2, column=6, pady=10)

label2 = ttk.Label(frame, text="", font="system")  # —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–µ—Ç–∫—É
label2.grid(row=3, column=6, pady=10)

# –≤—ã–≤–æ–¥ 3—Ñ–∞–π–ª–æ–≤ –≤  —Ç–µ–∫—Å—Ç
# —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≤—ã–≤–æ–¥ 1 —Ñ–∞–ª–∞
label3 = ttk.Label(frame, text="", justify=tk.LEFT)  # —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–µ—Ç–∫—É
label3.grid(row=2, column=7, pady=10)
# —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≤—ã–≤–æ–¥ 2 —Ñ–∞–ª–∞
label4 = ttk.Label(frame, text="", justify=tk.LEFT)  # —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–µ—Ç–∫—É
label4.grid(row=3, column=7, pady=10)
# —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≤—ã–≤–æ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ñ–∞–ª–æ–≤
# , bg='aquamarine') # —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–µ—Ç–∫—É
label5 = ttk.Label(frame, text="", justify=tk.LEFT)
label5.grid(row=1, column=7, pady=10)

label6 = ttk.Label(text="0%", justify=tk.LEFT)
label6.pack(fill=X, padx=700, pady=5)

label7 = ttk.Label(frame, text="", justify=tk.LEFT)
label7.grid(row=1, column=8, pady=10)

# –∫–æ–º–±–æ–±–æ–∫—Å—ã –¥–ª—è –≤–≤–æ–¥–∞ –∫–ª—é—á–∞ —Å–ª–∏—è–Ω–∏—è –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
combo = ttk.Combobox(frame, values='')
combo.grid(row=2, column=2, pady=10)

combo2 = ttk.Combobox(frame, values='')
combo2.grid(row=3, column=2, pady=10)

combo3 = ttk.Combobox(frame, values=[0,6])
combo3.current(0)
rows = combo3.get()
combo3.grid(row=4, column=2, pady=10)


progressbar = Progressbar(orient=HORIZONTAL, mode="determinate", length=500)
progressbar.pack(fill=X, padx=30, pady=5)

#–±–ª–æ–∫ –ª–∏—Å—Ç–±–æ–∫—Å–∞
# label = ttk.Label(text='–°–æ–±—Ä–∞—Ç—å —Ñ–∞–π–ª' )
# label.pack(fill=X, padx=310, pady=1)



lbox = Listbox(selectmode=EXTENDED)
lbox.pack(side=LEFT)

scroll = Scrollbar(command=lbox.yview)
scroll.pack(side=LEFT, fill=Y)

lbox.config(width=50, height=20, yscrollcommand=scroll.set)

f = Frame()
f.pack(side=LEFT, padx=10)


combo4 = Combobox(f, values='')
combo4.pack(fill=X, padx=90, pady=6)


Button(f, text="–î–æ–±–∞–≤–∏—Ç—å", command=add_item).pack(fill=X)
Button(f, text="–£–¥–∞–ª–∏—Ç—å", command=del_list).pack(fill=X)
Button(f, text="–°–æ–±—Ä–∞—Ç—å", command=print_list).pack(fill=X)
Button(text="–†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã - –≤—ã–±—Ä–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é", command=zip_ex).pack(fill=X, padx=90, pady=6)




window.mainloop()
